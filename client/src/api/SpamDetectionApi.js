/*
 * spamapi
 * Easily and directly scan and block spam security threats in input.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.46
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SpamDetectionAdvancedRequest', 'model/SpamDetectionAdvancedResponse', 'model/SpamDetectionRequest', 'model/SpamDetectionResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/SpamDetectionAdvancedRequest'), require('../model/SpamDetectionAdvancedResponse'), require('../model/SpamDetectionRequest'), require('../model/SpamDetectionResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveSpamapiClient) {
      root.CloudmersiveSpamapiClient = {};
    }
    root.CloudmersiveSpamapiClient.SpamDetectionApi = factory(root.CloudmersiveSpamapiClient.ApiClient, root.CloudmersiveSpamapiClient.SpamDetectionAdvancedRequest, root.CloudmersiveSpamapiClient.SpamDetectionAdvancedResponse, root.CloudmersiveSpamapiClient.SpamDetectionRequest, root.CloudmersiveSpamapiClient.SpamDetectionResponse);
  }
}(this, function(ApiClient, SpamDetectionAdvancedRequest, SpamDetectionAdvancedResponse, SpamDetectionRequest, SpamDetectionResponse) {
  'use strict';

  /**
   * SpamDetection service.
   * @module api/SpamDetectionApi
   * @version 2.0.0
   */

  /**
   * Constructs a new SpamDetectionApi. 
   * @alias module:api/SpamDetectionApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the spamDetectTextStringAdvancedPost operation.
     * @callback module:api/SpamDetectionApi~spamDetectTextStringAdvancedPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpamDetectionAdvancedResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform advanced AI spam detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
     * @param {Object} opts Optional parameters
     * @param {module:model/SpamDetectionAdvancedRequest} opts.body Spam detection request
     * @param {module:api/SpamDetectionApi~spamDetectTextStringAdvancedPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpamDetectionAdvancedResponse}
     */
    this.spamDetectTextStringAdvancedPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Apikey'];
      var contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = SpamDetectionAdvancedResponse;

      return this.apiClient.callApi(
        '/spam/detect/text-string/advanced', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the spamDetectTextStringPost operation.
     * @callback module:api/SpamDetectionApi~spamDetectTextStringPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpamDetectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform AI spam detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-75 API calls depending on model selected.
     * @param {Object} opts Optional parameters
     * @param {module:model/SpamDetectionRequest} opts.body Spam detection request
     * @param {module:api/SpamDetectionApi~spamDetectTextStringPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpamDetectionResponse}
     */
    this.spamDetectTextStringPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Apikey'];
      var contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = SpamDetectionResponse;

      return this.apiClient.callApi(
        '/spam/detect/text-string', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
